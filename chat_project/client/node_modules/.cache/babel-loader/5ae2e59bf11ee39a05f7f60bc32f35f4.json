{"ast":null,"code":"var _jsxFileName = \"/home/ghulam/Desktop/test/c_main_project/client/src/component/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ScrollBottom from 'react-scroll-to-bottom';\nimport './main.css'; //import Button from '@material-ui/core/Button'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Chat = _ref => {\n  _s();\n\n  let {\n    socket,\n    name,\n    room\n  } = _ref;\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const [mesList, setmesList] = useState([]);\n\n  const sendMessage = async () => {\n    if (currentMessage !== '') {\n      const messageData = {\n        room: room,\n        author: name,\n        message: currentMessage,\n        time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getMinutes()\n      };\n      await socket.emit('send_message', messageData);\n      setmesList(list => [...list, messageData]);\n      setCurrentMessage(\"\");\n    }\n  };\n\n  useEffect(() => {\n    socket.on(\"recived_message\", data => {\n      setmesList(list => [...list, data]);\n    });\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_div\",\n      children: /*#__PURE__*/_jsxDEV(ScrollBottom, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cent_div\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Live chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"body\",\n            children: mesList.map(messageContent => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"p1\",\n                className: name === messageContent.author ? \"you\" : \"other\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mes\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"m1\",\n                    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"\",\n                      children: messageContent.message\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 41,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 40,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"m2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: messageContent.author\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 44,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: messageContent.time\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 45,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 43,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 33\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"inp\",\n              type: \"text\",\n              placeholder: \"hey..\",\n              value: currentMessage,\n              onChange: event => {\n                setCurrentMessage(event.target.value);\n              },\n              onKeyPress: event => {\n                event.key === \"Enter\" && sendMessage();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: sendMessage,\n              children: \"\\u25BA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Chat, \"LoXCnM6JBpRMnbyYOldsXr7e3vE=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/ghulam/Desktop/test/c_main_project/client/src/component/Chat.js"],"names":["React","useEffect","useState","ScrollBottom","Chat","socket","name","room","currentMessage","setCurrentMessage","mesList","setmesList","sendMessage","messageData","author","message","time","Date","now","getHours","getMinutes","emit","list","on","data","map","messageContent","event","target","value","key"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport ScrollBottom from 'react-scroll-to-bottom'\nimport './main.css'\n//import Button from '@material-ui/core/Button'\n\nconst Chat = ({socket , name, room } )=>{\n    const [ currentMessage , setCurrentMessage] = useState(\"\");\n    const [ mesList , setmesList] = useState([]);\n\n    const sendMessage = async ()=>{\n        if(currentMessage !== ''){\n            const messageData={\n                room:room,\n                author:name,\n                message:currentMessage,\n                time:new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getMinutes()\n            };\n            await socket.emit('send_message',messageData);\n            setmesList((list)=>[...list,messageData]);\n            setCurrentMessage(\"\")\n        }\n        \n    };\n\n    useEffect(()=>{socket.on(\"recived_message\",(data)=>{\n        setmesList((list)=>[...list,data])\n    })}, [socket]);\n\n    return(\n        <>\n            <div className='main_div'>\n            <ScrollBottom>\n                <div className='cent_div'>\n                    <div className='header'><h2>Live chat</h2></div>\n                    <div className='body'>\n                        {mesList.map((messageContent)=>{\n                            return (\n                                <div id='p1' className={  name === messageContent.author ? \"you\" : \"other\"}>\n                                    <div className='mes'>\n                                        <div className='m1' >\n                                            <h3 className=''>{messageContent.message}</h3>\n                                        </div>\n                                        <div className='m2'>\n                                            <p>{messageContent.author}</p>\n                                            <p>{messageContent.time}</p>\n                                        </div>\n                                  </div>\n                                </div>\n                            )\n                        })}\n                    </div>\n                    <div className='footer'>\n                        <input className='inp' type='text' placeholder='hey..' value={currentMessage}\n                            onChange={(event)=>{setCurrentMessage(event.target.value)}}\n                            onKeyPress={(event)=>{\n                                event.key===\"Enter\" && sendMessage();\n                            }}\n                        />\n                        <button onClick={sendMessage}>&#9658;</button>\n                    </div>\n                </div>\n                </ScrollBottom>\n            </div>\n        </>\n    )\n}\nexport default Chat;"]},"metadata":{},"sourceType":"module"}